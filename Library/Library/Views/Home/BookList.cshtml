@model IEnumerable<Library.Models.BookModel>

<style>
    .sm-mb-2 {
        margin-bottom: 2px;
    }

    .flex-align-center {
        display: flex;
        align-items: center;
    }

    .book-list-header {
        padding: 5px 0px;
        background-color: transparent;
    }

    .accordion {
        background-color: #e5e5e5;
    }

    .accordion-header {
        background-color: #eee;
        color: #444;
    }

        .accordion-active, .accordion-header:hover {
            background-color: #ccc;
        }

    .accordion-btn {
        background-color: transparent;
        cursor: pointer;
        padding: 18px;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
        transition: 0.4s;
        font-weight: bold;
    }

    .panel {
        padding: 10px 18px;
        display: none;
        overflow: hidden;
    }
</style>

<script type="text/javascript">
        $(document).ready(function () {
            var ids = [];
            var bookDetail = $("#BookDetailModal").find(".book-detail").clone();

            function selectBook(item) {
                    if (item.checked) {
                        ids.push(item.value);
                    }
                    else {
                        ids.pop(item.value);
                    }

                    if (ids.length == 0) {
                        $("#borrowBtn").prop("disabled", true);
                    }
                    else {
                        $("#borrowBtn").removeAttr("disabled");
                    }
                console.log(ids);
            }

            $("#select-all").click(function () {
                if (this.checked) {
                    $(".form-check-input").each(function () {
                        if (!this.disabled && !this.checked) {
                            this.checked = true;
                            selectBook(this);
                        }
                    });
                } else {
                    $(".form-check-input").each(function () {
                        if (!this.disabled) {
                            this.checked = false;
                            selectBook(this);
                        }
                    });
                }
            });

            $(".form-check-input").click(function () {
                if (this.checked) {
                    var unChecked = 0;

                    $(".form-check-input").each(function () {
                        if (!this.checked && !this.disabled) {
                            unChecked = 1;
                        }
                    });

                    if (unChecked == 0) {
                        $("#select-all").prop("checked", true);
                    }
                }
                else {
                    $("#select-all").prop("checked", false);
                }
                selectBook(this);
            });

            $('#BookDetailModal').on('hidden.bs.modal', function () {
                $("#BookDetailModal").find(".book-detail-area").html('');
            });

            $("#borrowBtn").click(function (e) {
                e.preventDefault();
                $.ajax({
                    method: "POST",
                    dataType: "json",
                    url: "@Url.Action("BatchBorrow", "Home")",
                    data: JSON.stringify(ids),
                    contentType: "application/json",
                    success: function (data) {
                        // populate data to fields
                        var booksHtml = '';
                        for (var i = 0; i < data.books.length; i++) {
                            $(bookDetail).find("input[name='BookIds']").val(data.books[i].id);
                            $(bookDetail).find(".book-id-value").text(data.books[i].id);
                            $(bookDetail).find(".book-name-value").text(data.books[i].bookName);
                            $(bookDetail).find(".book-author-value").text(data.books[i].author);
                            $(bookDetail).find(".book-published-date-value").text(new Date(data.books[i].publishedDate).toDateString());
                            booksHtml += bookDetail.html();
                        }
                        $("#BookDetailModal").find(".book-detail-area").html(booksHtml);
                        $("#BookDetailModal").modal('show');
                    }
                });
            });

            $(".accordion-btn").click(function (e) {
                e.preventDefault();
                var accordion = $(this).parent();
                $(accordion).toggleClass("accordion-active");
                $(accordion).next().slideToggle("fast");

                if (!$(accordion).hasClass("fetched")) {
                    $(accordion).addClass("fetched");
                    var panel = $(accordion).next();
                    $.ajax({
                        method: "POST",
                        dataType: "json",
                        url: "@Url.Action("FetchBookListItem", "Home")",
                        data: JSON.stringify($(this).val()),
                        contentType: "application/json",
                        success: function (data) {
                            $(panel).find(".check-book-id").val(data.id);
                            $(panel).find("#panel-book-id").text(data.id);
                            $(panel).find("#panel-book-name").text(data.bookName);
                            $(panel).find("#panel-book-author").text(data.author);
                            $(panel).find("#panel-book-published").text(new Date(data.publishedDate).toDateString());
                            if (data.borrower != null) {
                                $(panel).find("#panel-borrower-id").text(data.borrower.id);
                                $(panel).find("#panel-borrower-name").text(data.borrower.borrowerName);
                                $(panel).find("#panel-borrower-address").text(data.borrower.address);
                            }
                        }
                    });
                }
            });
        });
</script>

<div class="modal" tabindex="-1" hidden id="BookDetailModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Borrower Form</h5>
            </div>
            <div class="modal-body">
                <form asp-action="BorrowBooks">
                    <div class="book-detail-area container-fluid">
                        <div class="book-detail row">
                            <div class="book-id">
                                <input type="hidden" name="BookIds" />
                                <label>Book Id:</label>
                                <div class="book-id-value">1</div>
                            </div>
                            <div class="book-name">
                                <label>Book Name:</label>
                                <div class="book-name-value">Book Name</div>
                            </div>
                            <div class="book-author">
                                <label>Book Author:</label>
                                <div class="book-author-value">Book Author</div>
                            </div>
                            <div class="book-published-date">
                                <label>Published Date:</label>
                                <div class="book-published-date-value">Published Date</div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div>
                        <h4>Borrower Detail</h4>
                        <div class="row">

                            <div class="col-md-4">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <div class="form-group">
                                    <label for="BorrowerName" class="control-label">Borrower Name</label>
                                    <input type="text" name="BorrowerName" class="form-control" />
                                </div>
                                <div class="form-group">
                                    <label for="Address" class="control-label">Address</label>
                                    <input type="text" name="Address" class="form-control" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <button id="SubmitBorrowedBooks" class="btn btn-primary">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>

<form asp-action-for="BatchBorrow" id="borrowBooksForm">

    <div class="container-fluid accordion-active sm-mb-2">
        <div class="book-list-header row flex-align-center">
            <input type="checkbox" class="col-md-1 col-xs-1" id="select-all" />
        </div>
    </div>

    @foreach (var item in Model)
    {
        <div class="accordion container-fluid sm-mb-2">
            <div class="accordion-header row flex-align-center">
                <input class="form-check-input col-md-1 col-xs-1 check-book-id" type="checkbox" value="@item.Id" disabled="@item.Borrowed" />
                <button class="accordion-btn col-md-11 col-xs-11" value="@item.Id">
                    @item.BookName
                    @{
                        if (item.Borrowed)
                        {
                            <span class="badge">Unavailable</span>
                        }
                        else
                        {
                            <span class="badge bg-primary">Available</span>
                        }
                    }
                </button>
            </div>
            <div class="panel">
                <div class="row panel-content" id="panel-@item.Id">
                    <dl class="dl-horizontal col-md-6 col-xs-12 panel-content-book">
                        <dt>
                            Book Id
                        </dt>
                        <dd id="panel-book-id">
                            Book Id Value
                        </dd>
                        <dt>
                            Book Name
                        </dt>
                        <dd id="panel-book-name">
                            Book Name Value
                        </dd>
                        <dt>
                            Author
                        </dt>
                        <dd id="panel-book-author">
                            Author value
                        </dd>
                        <dt>
                            Published Date
                        </dt>
                        <dd id="panel-book-published">
                            Published Date Value
                        </dd>
                    </dl>

                    @{
                        if (item.Borrowed)
                        {
                            <dl class="dl-horizontal col-md-6 col-xs-12 panel-content-borrower">
                                <dt>
                                    Borrower Id
                                </dt>
                                <dd id="panel-borrower-id">
                                    Borrower Id Value
                                </dd>
                                <dt>
                                    Borrower Name
                                </dt>
                                <dd id="panel-borrower-name">
                                    Borrower Name Value
                                </dd>
                                <dt>
                                    Address
                                </dt>
                                <dd id="panel-borrower-address">
                                    Address Value
                                </dd>
                            </dl>
                        }

                    }
                </div>
                <hr>
                @{
                    if (item.Borrowed)
                    {
                        @Html.ActionLink("Return", "ReturnBook", new { id = item.Id })
                        <span> | </span>
                    }
                }
                @Html.ActionLink("Delete", "DeleteBook", new { id = item.Id })
            </div>
        </div>
    }
    <hr />
    <button class="btn btn-primary" id="borrowBtn" disabled>Borrow</button>
</form>