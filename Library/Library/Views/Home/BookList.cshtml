@model IEnumerable<Library.Models.BookModel>

<style>
    .sm-mb-2 {
        margin-bottom: 2px;
    }

    .flex-align-center {
        display: flex;
        align-items: center;
    }

    .book-list-header {
        padding: 5px 0px;
        background-color: #66b95f;
    }

    .accordion {
        background-color: #e5e5e5;
    }

    .accordion-header {
        background-color: #eee;
        color: #444;
    }

        .accordion-active, .accordion-header:hover {
            background-color: #ccc;
        }

    .accordion-btn {
        background-color: transparent;
        cursor: pointer;
        padding: 18px;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
        transition: 0.4s;
        font-weight: bold;
    }

    .panel {
        padding: 10px 18px;
        display: none;
        overflow: hidden;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        $("#borrowBtn").hide();
        $(".form-check-input").click(function () {
            if (this.checked) {
                $("#borrowBtn").show();
                var unChecked = 0;
                $(".form-check-input").each(function () {
                    if (!this.checked && !this.disabled) {
                        unChecked += 1;
                    }
                });
                if (unChecked == 0) {
                    $("#selectAll").prop("checked", true);
                }
            }
            else {
                if ($(".form-check-input").filter(":checked").length == 0) {
                    $("#borrowBtn").hide();
                }
                $("#selectAll").prop("checked", false);
            }
        });

        $("#selectAll").click(function () {
            if (this.checked) {
                $("#borrowBtn").show();
                $(".form-check-input").each(function () {
                    if (!this.disabled && !this.checked) {
                        $(this).prop("checked",true);
                    }
                });
            }
            else {
                $("#borrowBtn").hide();
                $(".form-check-input").each(function () {
                    if (!this.disabled) {
                        $(this).prop("checked", false);
                    }
                });
            }
        });

        $(".accordion-btn").click(function (e) {
            e.preventDefault();
            $(this).parent().toggleClass("accordion-active");
            $(this).parent().next().slideToggle("fast");
        });
    });
</script>

<form asp-action="BorrowBooks" id="borrowBooksForm">
    <div class="container-fluid accordion-active sm-mb-2">
        <div class="book-list-header row flex-align-center">
            <input type="checkbox" class="col-md-1 col-xs-1" id="selectAll" />
        </div>
    </div>

    @foreach (var item in Model)
    {
        <div class="accordion container-fluid sm-mb-2">
            <div class="accordion-header row flex-align-center">
                <input class="form-check-input col-md-1 col-xs-1" type="checkbox" name="ids" value="@item.Id" disabled="@item.Borrowed" />
                <button class="accordion-btn col-md-11 col-xs-11">
                    @item.BookName
                    @{
                        if (item.Borrowed)
                        {
                            <span class="badge">Unavailable</span>
                        }
                        else
                        {
                            <span class="badge">Available</span>
                        }
                    }
                </button>
            </div>
            <div class="panel">
                <div class="row">
                    <dl class="dl-horizontal col-md-6 col-xs-12">
                        <dt>
                            @Html.DisplayNameFor(model => item.Id)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.Id)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => item.BookName)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.BookName)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => item.Author)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.Author)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => item.PublishedDate)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.PublishedDate)
                        </dd>
                    </dl>
                    @{
                        if (item.Borrowed)
                        {
                            <dl class="dl-horizontal col-md-6 col-xs-12">
                                <dt>
                                    @Html.DisplayNameFor(model => item.Borrower.Id)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => item.Borrower.Id)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => item.Borrower.BorrowerName)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => item.Borrower.BorrowerName)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => item.Borrower.Address)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => item.Borrower.Address)
                                </dd>
                            </dl>
                        }

                    }
                </div>
                <hr>
                @{
                    if (item.Borrowed)
                    {
                        @Html.ActionLink("Return", "ReturnBook", new { id = item.Id })
                    }
                }
            </div>
        </div>
    }
    <button type="submit" class="btn btn-primary" id="borrowBtn">Borrow</button>
</form>

